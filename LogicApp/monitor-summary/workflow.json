{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "For_each": {
                "actions": {
                    "Append_to_VMNames_to_Array": {
                        "inputs": {
                            "name": "VMNamesArr",
                            "value": "@concat('Resource =~ \"',replace(substring(item(),indexOf(item(),'virtualMachines/')),'virtualMachines/',''),'\"')"
                        },
                        "type": "AppendToArrayVariable"
                    }
                },
                "foreach": "@variables('VMs With ID')",
                "runAfter": {
                    "Initialize_variable": [
                        "SUCCEEDED"
                    ]
                },
                "type": "Foreach"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "VMNamesArr",
                            "type": "array"
                        }
                    ]
                },
                "runAfter": {
                    "Is_First_Record": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Is_First_Record": {
                "inputs": {
                    "variables": [
                        {
                            "name": "IsFirstRecord",
                            "type": "integer",
                            "value": 0
                        }
                    ]
                },
                "runAfter": {
                    "VMS_To_Query": [
                        "SUCCEEDED"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_JSON": {
                "inputs": {
                    "content": "@triggerOutputs()?['body']?['messageText']",
                    "schema": {
                        "properties": {
                            "runId": {
                                "type": "string"
                            },
                            "scheduleName": {
                                "type": "string"
                            },
                            "virtualMachines": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {},
                "type": "ParseJson"
            },
            "Run_query_and_visualize_results": {
                "inputs": {
                    "body": " UpdateSummary | where ( @{join(variables('VMNamesArr'),' or ')} ) | project Resource, Computer, tostring(CriticalUpdatesMissing), tostring(SecurityUpdatesMissing), tostring(OtherUpdatesMissing) ,TimeGenerated\n| summarize arg_max(TimeGenerated,*) by Resource  \n",
                    "host": {
                        "connection": {
                            "referenceName": "azuremonitorlogs-4"
                        }
                    },
                    "method": "post",
                    "path": "/visualizeQuery",
                    "queries": {
                        "resourcegroups": "@{appsetting('ResourceGroup')}",
                        "resourcename": "@{appsetting('WorkspaceName')}",
                        "resourcetype": "Log Analytics Workspace",
                        "subscriptions": "@{appsetting('SubscriptionId')}",
                        "timerange": "Last 7 days",
                        "visType": "Html Table"
                    }
                },
                "runAfter": {
                    "For_each": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "staticResult": {
                        "name": "Run_query_and_visualize_results0",
                        "staticResultOptions": "Disabled"
                    }
                },
                "type": "ApiConnection"
            },
            "Send_an_email_(V2)": {
                "inputs": {
                    "body": {
                        "Body": "<p><br>\n@{base64ToString(body('Run_query_and_visualize_results')?['body'])}</p>",
                        "Importance": "Normal",
                        "Subject": "Patch Schedule- @{body('Parse_JSON')?['scheduleName']}- Completed, Run ID  : @{body('Parse_JSON')?['runId']}",
                        "To": "@{appsetting('EmailRecipients')}"
                    },
                    "host": {
                        "connection": {
                            "referenceName": "office365"
                        }
                    },
                    "method": "post",
                    "path": "/v2/Mail"
                },
                "runAfter": {
                    "Run_query_and_visualize_results": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "VMS_To_Query": {
                "inputs": {
                    "variables": [
                        {
                            "name": "VMs To Query",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "VMs_With_ID": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "VMs_With_ID": {
                "inputs": {
                    "variables": [
                        {
                            "name": "VMs With ID",
                            "type": "array",
                            "value": "@body('Parse_JSON')?['virtualMachines']"
                        }
                    ]
                },
                "runAfter": {
                    "Parse_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "staticResults": {
            "Run_query_and_visualize_results0": {
                "outputs": {
                    "headers": {},
                    "statusCode": "OK"
                },
                "status": "Succeeded"
            }
        },
        "triggers": {
            "When_messages_are_available_in_a_queue": {
                "inputs": {
                    "parameters": {
                        "queueName": "updatesummary"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "azurequeues",
                        "operationId": "receiveQueueMessages",
                        "serviceProviderId": "/serviceProviders/azurequeues"
                    }
                },
                "type": "ServiceProvider"
            }
        }
    },
    "kind": "Stateful"
}
